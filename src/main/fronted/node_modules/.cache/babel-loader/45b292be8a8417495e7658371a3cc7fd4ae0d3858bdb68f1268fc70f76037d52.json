{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dongwoo\\\\Desktop\\\\WeatherWhisperer\\\\src\\\\main\\\\fronted\\\\src\\\\MapTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'ol/ol.css';\nimport { XYZ } from 'ol/source';\nimport { Map as AllMap, View } from 'ol';\nimport { fromLonLat, get as getProjection } from 'ol/proj';\nimport { Tile as TileLayer } from 'ol/layer';\nimport { OSM } from 'ol/source';\nimport { useRecoilState } from 'recoil';\nimport PopupMessage from './PopupMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [mapObject, setMapObject] = useState({});\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    const map = new AllMap({\n      layers: [new TileLayer({\n        source: new XYZ({\n          url: \"http://xdworld.vworld.kr:8080/2d/Base/202002/{z}/{x}/{y}.png\"\n        })\n      })],\n      target: 'map',\n      view: new View({\n        projection: getProjection('EPSG:3857'),\n        center: fromLonLat([126.752, 37.4713], 'EPSG:3857'),\n        zoom: 13\n      })\n    });\n    setMapObject({\n      map\n    });\n\n    // Clean up function\n    return () => {\n      if (map) {\n        map.setTarget(null);\n      }\n    };\n  }, []);\n  const handlePopupMessage = () => {\n    setMessage(\"아직은 안되지롱!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '100rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handlePopupMessage,\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PopupMessage, {\n      message: \"aa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n};\n_s(Map, \"l/0sHVbatdXKMPNsbpJ4eax27mI=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","XYZ","Map","AllMap","View","fromLonLat","get","getProjection","Tile","TileLayer","OSM","useRecoilState","PopupMessage","jsxDEV","_jsxDEV","_s","mapObject","setMapObject","message","setMessage","map","layers","source","url","target","view","projection","center","zoom","setTarget","handlePopupMessage","id","style","height","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dongwoo/Desktop/WeatherWhisperer/src/main/fronted/src/MapTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'ol/ol.css';\r\nimport { XYZ } from 'ol/source';\r\nimport { Map as AllMap, View } from 'ol';\r\nimport { fromLonLat, get as getProjection } from 'ol/proj';\r\nimport { Tile as TileLayer } from 'ol/layer';\r\nimport { OSM } from 'ol/source';\r\nimport { useRecoilState } from 'recoil';\r\nimport PopupMessage from './PopupMessage';\r\n\r\n\r\nconst Map = () => {\r\n    const [mapObject, setMapObject] = useState({});\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        const map = new AllMap({\r\n            layers: [\r\n                new TileLayer({\r\n                    source: new XYZ({ url: \"http://xdworld.vworld.kr:8080/2d/Base/202002/{z}/{x}/{y}.png\" }),\r\n                })\r\n            ],\r\n            target: 'map',\r\n            view: new View({\r\n                projection: getProjection('EPSG:3857'),\r\n                center: fromLonLat([126.752, 37.4713], 'EPSG:3857'),\r\n                zoom: 13\r\n            })\r\n        });\r\n\r\n        setMapObject({ map });\r\n\r\n        // Clean up function\r\n        return () => {\r\n            if (map) {\r\n                map.setTarget(null);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n\r\n    const handlePopupMessage = () => {\r\n        setMessage(\"아직은 안되지롱!\");\r\n    };\r\n\r\n\r\n\r\n    return <div id=\"map\" style={{ height: '100rem' }}>\r\n        <div onClick={handlePopupMessage}>로그아웃</div>\r\n        <PopupMessage message={\"aa\"} />\r\n    </div>;\r\n}\r\n\r\nexport default Map;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,GAAG,QAAQ,WAAW;AAC/B,SAASC,GAAG,IAAIC,MAAM,EAAEC,IAAI,QAAQ,IAAI;AACxC,SAASC,UAAU,EAAEC,GAAG,IAAIC,aAAa,QAAQ,SAAS;AAC1D,SAASC,IAAI,IAAIC,SAAS,QAAQ,UAAU;AAC5C,SAASC,GAAG,QAAQ,WAAW;AAC/B,SAASC,cAAc,QAAQ,QAAQ;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMZ,GAAG,GAAGA,CAAA,KAAM;EAAAa,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAG1CC,SAAS,CAAC,MAAM;IACZ,MAAMoB,GAAG,GAAG,IAAIjB,MAAM,CAAC;MACnBkB,MAAM,EAAE,CACJ,IAAIZ,SAAS,CAAC;QACVa,MAAM,EAAE,IAAIrB,GAAG,CAAC;UAAEsB,GAAG,EAAE;QAA+D,CAAC;MAC3F,CAAC,CAAC,CACL;MACDC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE,IAAIrB,IAAI,CAAC;QACXsB,UAAU,EAAEnB,aAAa,CAAC,WAAW,CAAC;QACtCoB,MAAM,EAAEtB,UAAU,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,WAAW,CAAC;QACnDuB,IAAI,EAAE;MACV,CAAC;IACL,CAAC,CAAC;IAEFX,YAAY,CAAC;MAAEG;IAAI,CAAC,CAAC;;IAErB;IACA,OAAO,MAAM;MACT,IAAIA,GAAG,EAAE;QACLA,GAAG,CAACS,SAAS,CAAC,IAAI,CAAC;MACvB;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC7BX,UAAU,CAAC,WAAW,CAAC;EAC3B,CAAC;EAID,oBAAOL,OAAA;IAAKiB,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAC7CpB,OAAA;MAAKqB,OAAO,EAAEL,kBAAmB;MAAAI,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5CzB,OAAA,CAACF,YAAY;MAACM,OAAO,EAAE;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AACV,CAAC;AAAAxB,EAAA,CAzCKb,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}