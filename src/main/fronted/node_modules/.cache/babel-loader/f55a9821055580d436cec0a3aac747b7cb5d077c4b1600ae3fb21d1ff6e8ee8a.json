{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dongwoo\\\\Desktop\\\\WeatherWhisperer\\\\src\\\\main\\\\fronted\\\\src\\\\MapTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'ol/ol.css';\nimport { XYZ } from 'ol/source';\nimport { Map as AllMap, View } from 'ol';\nimport { fromLonLat, get as getProjection } from 'ol/proj';\nimport { Tile as TileLayer } from 'ol/layer';\nimport { OSM } from 'ol/source';\nimport ReactModal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customModalStyles = {\n  overlay: {\n    backgroundColor: \" rgba(0, 0, 0, 0.4)\",\n    width: \"100%\",\n    height: \"100vh\",\n    zIndex: \"10\",\n    position: \"fixed\",\n    top: \"0\",\n    left: \"0\"\n  },\n  content: {\n    width: \"360px\",\n    height: \"180px\",\n    zIndex: \"150\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    borderRadius: \"10px\",\n    boxShadow: \"2px 2px 2px rgba(0, 0, 0, 0.25)\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    overflow: \"auto\"\n  }\n};\nconst Map = () => {\n  _s();\n  const [mapObject, setMapObject] = useState({});\n  useEffect(() => {\n    const map = new AllMap({\n      layers: [new TileLayer({\n        source: new XYZ({\n          url: \"http://xdworld.vworld.kr:8080/2d/Base/202002/{z}/{x}/{y}.png\"\n        })\n      })],\n      target: 'map',\n      view: new View({\n        projection: getProjection('EPSG:3857'),\n        center: fromLonLat([126.752, 37.4713], 'EPSG:3857'),\n        zoom: 13\n      })\n    });\n    setMapObject({\n      map\n    });\n\n    // Clean up function\n    return () => {\n      if (map) {\n        map.setTarget(null);\n      }\n    };\n  }, []);\n  const handleButtonClick = () => {\n    // Open the modal when the button is clicked\n    setModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '100rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Change Map Center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 12\n  }, this);\n};\n_s(Map, \"CDB0cksOAXpfq79TG+KPmRrXZLw=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","XYZ","Map","AllMap","View","fromLonLat","get","getProjection","Tile","TileLayer","OSM","ReactModal","jsxDEV","_jsxDEV","customModalStyles","overlay","backgroundColor","width","height","zIndex","position","top","left","content","transform","borderRadius","boxShadow","justifyContent","overflow","_s","mapObject","setMapObject","map","layers","source","url","target","view","projection","center","zoom","setTarget","handleButtonClick","setModalOpen","id","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dongwoo/Desktop/WeatherWhisperer/src/main/fronted/src/MapTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'ol/ol.css';\r\nimport { XYZ } from 'ol/source';\r\nimport { Map as AllMap, View } from 'ol';\r\nimport { fromLonLat, get as getProjection } from 'ol/proj';\r\nimport { Tile as TileLayer } from 'ol/layer';\r\nimport { OSM } from 'ol/source';\r\nimport ReactModal from \"react-modal\";\r\n\r\n\r\n\r\nconst customModalStyles  = {\r\n    overlay: {\r\n        backgroundColor: \" rgba(0, 0, 0, 0.4)\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        zIndex: \"10\",\r\n        position: \"fixed\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n    },\r\n    content: {\r\n        width: \"360px\",\r\n        height: \"180px\",\r\n        zIndex: \"150\",\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        borderRadius: \"10px\",\r\n        boxShadow: \"2px 2px 2px rgba(0, 0, 0, 0.25)\",\r\n        backgroundColor: \"white\",\r\n        justifyContent: \"center\",\r\n        overflow: \"auto\",\r\n    },\r\n};\r\n\r\nconst Map = () => {\r\n    const [mapObject, setMapObject] = useState({});\r\n\r\n    useEffect(() => {\r\n        const map = new AllMap({\r\n            layers: [\r\n                new TileLayer({\r\n                    source: new XYZ({ url: \"http://xdworld.vworld.kr:8080/2d/Base/202002/{z}/{x}/{y}.png\" }),\r\n                })\r\n            ],\r\n            target: 'map',\r\n            view: new View({\r\n                projection: getProjection('EPSG:3857'),\r\n                center: fromLonLat([126.752, 37.4713], 'EPSG:3857'),\r\n                zoom: 13\r\n            })\r\n        });\r\n\r\n        setMapObject({ map });\r\n\r\n        // Clean up function\r\n        return () => {\r\n            if (map) {\r\n                map.setTarget(null);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n\r\n    const handleButtonClick = () => {\r\n        // Open the modal when the button is clicked\r\n        setModalOpen(true);\r\n    };\r\n\r\n    return <div id=\"map\" style={{ height: '100rem' }}>\r\n        <button onClick={handleButtonClick}>Change Map Center</button>\r\n    </div>;\r\n}\r\n\r\nexport default Map;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,GAAG,QAAQ,WAAW;AAC/B,SAASC,GAAG,IAAIC,MAAM,EAAEC,IAAI,QAAQ,IAAI;AACxC,SAASC,UAAU,EAAEC,GAAG,IAAIC,aAAa,QAAQ,SAAS;AAC1D,SAASC,IAAI,IAAIC,SAAS,QAAQ,UAAU;AAC5C,SAASC,GAAG,QAAQ,WAAW;AAC/B,OAAOC,UAAU,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIrC,MAAMC,iBAAiB,GAAI;EACvBC,OAAO,EAAE;IACLC,eAAe,EAAE,qBAAqB;IACtCC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,OAAO;IACfC,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE,OAAO;IACjBC,GAAG,EAAE,GAAG;IACRC,IAAI,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;IACLN,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,OAAO;IACfC,MAAM,EAAE,KAAK;IACbC,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE,KAAK;IACXE,SAAS,EAAE,uBAAuB;IAClCC,YAAY,EAAE,MAAM;IACpBC,SAAS,EAAE,iCAAiC;IAC5CV,eAAe,EAAE,OAAO;IACxBW,cAAc,EAAE,QAAQ;IACxBC,QAAQ,EAAE;EACd;AACJ,CAAC;AAED,MAAM1B,GAAG,GAAGA,CAAA,KAAM;EAAA2B,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,MAAMgC,GAAG,GAAG,IAAI7B,MAAM,CAAC;MACnB8B,MAAM,EAAE,CACJ,IAAIxB,SAAS,CAAC;QACVyB,MAAM,EAAE,IAAIjC,GAAG,CAAC;UAAEkC,GAAG,EAAE;QAA+D,CAAC;MAC3F,CAAC,CAAC,CACL;MACDC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE,IAAIjC,IAAI,CAAC;QACXkC,UAAU,EAAE/B,aAAa,CAAC,WAAW,CAAC;QACtCgC,MAAM,EAAElC,UAAU,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,WAAW,CAAC;QACnDmC,IAAI,EAAE;MACV,CAAC;IACL,CAAC,CAAC;IAEFT,YAAY,CAAC;MAAEC;IAAI,CAAC,CAAC;;IAErB;IACA,OAAO,MAAM;MACT,IAAIA,GAAG,EAAE;QACLA,GAAG,CAACS,SAAS,CAAC,IAAI,CAAC;MACvB;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACAC,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBAAO9B,OAAA;IAAK+B,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAE3B,MAAM,EAAE;IAAS,CAAE;IAAA4B,QAAA,eAC7CjC,OAAA;MAAQkC,OAAO,EAAEL,iBAAkB;MAAAI,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AACV,CAAC;AAAAtB,EAAA,CArCK3B,GAAG;AAAAkD,EAAA,GAAHlD,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}