{"ast":null,"code":"import React,{useState,useEffect}from'react';import'ol/ol.css';import{XYZ}from'ol/source';import{Map as AllMap,View}from'ol';import{fromLonLat,get as getProjection}from'ol/proj';import{Tile as TileLayer}from'ol/layer';import{OSM}from'ol/source';import{jsx as _jsx}from\"react/jsx-runtime\";const Map=()=>{const[mapObject,setMapObject]=useState({});const[message,setMessage]=useState(\"\");useEffect(()=>{const map=new AllMap({layers:[new TileLayer({source:new XYZ({url:\"http://xdworld.vworld.kr:8080/2d/Base/202002/{z}/{x}/{y}.png\"})})],target:'map',view:new View({projection:getProjection('EPSG:3857'),center:fromLonLat([126.752,37.4713],'EPSG:3857'),zoom:13})});setMapObject({map});// Clean up function\nreturn()=>{if(map){map.setTarget(null);}};},[]);return/*#__PURE__*/_jsx(\"div\",{id:\"map\"});};export default Map;","map":{"version":3,"names":["React","useState","useEffect","XYZ","Map","AllMap","View","fromLonLat","get","getProjection","Tile","TileLayer","OSM","jsx","_jsx","mapObject","setMapObject","message","setMessage","map","layers","source","url","target","view","projection","center","zoom","setTarget","id"],"sources":["C:/Users/dongwoo/Desktop/WeatherWhisperer/src/main/fronted/src/components/MapMain.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'ol/ol.css';\r\nimport { XYZ } from 'ol/source';\r\nimport { Map as AllMap, View } from 'ol';\r\nimport { fromLonLat, get as getProjection } from 'ol/proj';\r\nimport { Tile as TileLayer } from 'ol/layer';\r\nimport { OSM } from 'ol/source';\r\n\r\n\r\nconst Map = () => {\r\n    const [mapObject, setMapObject] = useState({});\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        const map = new AllMap({\r\n            layers: [\r\n                new TileLayer({\r\n                    source: new XYZ({ url: \"http://xdworld.vworld.kr:8080/2d/Base/202002/{z}/{x}/{y}.png\" }),\r\n                })\r\n            ],\r\n            target: 'map',\r\n            view: new View({\r\n                projection: getProjection('EPSG:3857'),\r\n                center: fromLonLat([126.752, 37.4713], 'EPSG:3857'),\r\n                zoom: 13\r\n            })\r\n        });\r\n\r\n        setMapObject({ map });\r\n\r\n        // Clean up function\r\n        return () => {\r\n            if (map) {\r\n                map.setTarget(null);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    return <div id=\"map\">\r\n    </div>;\r\n}\r\n\r\nexport default Map;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAClB,OAASC,GAAG,KAAQ,WAAW,CAC/B,OAASC,GAAG,GAAI,CAAAC,MAAM,CAAEC,IAAI,KAAQ,IAAI,CACxC,OAASC,UAAU,CAAEC,GAAG,GAAI,CAAAC,aAAa,KAAQ,SAAS,CAC1D,OAASC,IAAI,GAAI,CAAAC,SAAS,KAAQ,UAAU,CAC5C,OAASC,GAAG,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAGhC,KAAM,CAAAV,GAAG,CAAGA,CAAA,GAAM,CACd,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9C,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAG1CC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAiB,GAAG,CAAG,GAAI,CAAAd,MAAM,CAAC,CACnBe,MAAM,CAAE,CACJ,GAAI,CAAAT,SAAS,CAAC,CACVU,MAAM,CAAE,GAAI,CAAAlB,GAAG,CAAC,CAAEmB,GAAG,CAAE,8DAA+D,CAAC,CAC3F,CAAC,CAAC,CACL,CACDC,MAAM,CAAE,KAAK,CACbC,IAAI,CAAE,GAAI,CAAAlB,IAAI,CAAC,CACXmB,UAAU,CAAEhB,aAAa,CAAC,WAAW,CAAC,CACtCiB,MAAM,CAAEnB,UAAU,CAAC,CAAC,OAAO,CAAE,OAAO,CAAC,CAAE,WAAW,CAAC,CACnDoB,IAAI,CAAE,EACV,CAAC,CACL,CAAC,CAAC,CAEFX,YAAY,CAAC,CAAEG,GAAI,CAAC,CAAC,CAErB;AACA,MAAO,IAAM,CACT,GAAIA,GAAG,CAAE,CACLA,GAAG,CAACS,SAAS,CAAC,IAAI,CAAC,CACvB,CACJ,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAMN,mBAAOd,IAAA,QAAKe,EAAE,CAAC,KAAK,CACf,CAAC,CACV,CAAC,CAED,cAAe,CAAAzB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}